<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 颇忒脱的技术博客</title>
    <link>https://chanjarster.github.io/post/</link>
    <description>Recent content in Posts on 颇忒脱的技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 26 Oct 2018 15:57:03 +0800</lastBuildDate>
    
	<atom:link href="https://chanjarster.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用Prometheus&#43;Alertmanager告警JVM异常情况</title>
      <link>https://chanjarster.github.io/post/prom-alert-jvm/</link>
      <pubDate>Fri, 26 Oct 2018 15:57:03 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/prom-alert-jvm/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;../prom-grafana-jvm&#34;&gt;前一篇文章&lt;/a&gt;中提到了如何使用Prometheus+Grafana来监控JVM。本文介绍如何使用Prometheus+Alertmanager来对JVM的某些情况作出告警。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Prometheus&#43;Grafana监控JVM</title>
      <link>https://chanjarster.github.io/post/prom-grafana-jvm/</link>
      <pubDate>Wed, 24 Oct 2018 16:52:08 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/prom-grafana-jvm/</guid>
      <description>&lt;p&gt;本文介绍如何使用Prometheus+Grafana监控JVM的方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>K8S如何限制资源使用</title>
      <link>https://chanjarster.github.io/post/k8s-how-to-limit-resource/</link>
      <pubDate>Mon, 22 Oct 2018 10:15:20 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/k8s-how-to-limit-resource/</guid>
      <description>&lt;p&gt;本文介绍几种在K8S中限制资源使用的几种方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>K8s如何安全地关闭Node</title>
      <link>https://chanjarster.github.io/post/k8s-how-to-shutdown-node-safely/</link>
      <pubDate>Mon, 22 Oct 2018 10:09:39 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/k8s-how-to-shutdown-node-safely/</guid>
      <description>&lt;p&gt;本文介绍如何安全地关闭Node。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>K8S重启Deployment的小技巧</title>
      <link>https://chanjarster.github.io/post/k8s-restart-deployment/</link>
      <pubDate>Mon, 22 Oct 2018 10:00:34 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/k8s-restart-deployment/</guid>
      <description>&lt;p&gt;本文介绍重启K8S Deployment的小技巧&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Diskbenchmark测试硬盘性能</title>
      <link>https://chanjarster.github.io/post/intro-diskbenchmark/</link>
      <pubDate>Fri, 19 Oct 2018 14:14:12 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/intro-diskbenchmark/</guid>
      <description>&lt;p&gt;使用&lt;a href=&#34;https://github.com/ongardie/diskbenchmark&#34;&gt;diskbenchmark&lt;/a&gt;测试硬盘性能。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用VisualVm和JMX远程监控K8S里的Java进程</title>
      <link>https://chanjarster.github.io/post/visualvm-remote-monitoring-jmx-k8s/</link>
      <pubDate>Mon, 15 Oct 2018 09:55:12 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/visualvm-remote-monitoring-jmx-k8s/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;../visualvm-remote-monitoring-jmx/&#34;&gt;利用VisualVm和JMX远程监控Java进程&lt;/a&gt;和&lt;a href=&#34;../visualvm-remote-monitoring-jmx-ssl/&#34;&gt;VisualVm利用SSL连接JMX的方法&lt;/a&gt;里介绍了如何使用VisualVm+JMX监控远程Java进程的方法。那么如何监控一个运行在K8S集群中的Java进程呢？其实大致方法也是类似的。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VisualVm利用SSL连接JMX的方法</title>
      <link>https://chanjarster.github.io/post/visualvm-remote-monitoring-jmx-ssl/</link>
      <pubDate>Wed, 10 Oct 2018 15:47:02 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/visualvm-remote-monitoring-jmx-ssl/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;../visualvm-remote-monitoring-jmx/&#34;&gt;前一篇文章&lt;/a&gt;里提到在生产环境下应该使用SSL来创建JMX连接，本文就来讲一下具体怎么做。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用VisualVm和JMX远程监控Java进程</title>
      <link>https://chanjarster.github.io/post/visualvm-remote-monitoring-jmx/</link>
      <pubDate>Wed, 10 Oct 2018 13:57:58 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/visualvm-remote-monitoring-jmx/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;../visualvm-remote-monitoring/&#34;&gt;前一篇文章&lt;/a&gt;里我们发现通过jstatd + VisualVm的方式，不能获得Java进程的CPU、线程、MBean信息，这时JMX就要登场了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>利用VisualVm远程监控Java进程</title>
      <link>https://chanjarster.github.io/post/visualvm-remote-monitoring/</link>
      <pubDate>Wed, 10 Oct 2018 10:59:27 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/visualvm-remote-monitoring/</guid>
      <description>&lt;p&gt;本文介绍利用&lt;a href=&#34;https://visualvm.github.io/&#34;&gt;VisualVm&lt;/a&gt;和&lt;a href=&#34;https://docs.oracle.com/javase/8/docs/technotes/tools/unix/jstatd.html&#34;&gt;jstatd&lt;/a&gt;来远程监控Java进程的方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>远程Debug Java进程的方法</title>
      <link>https://chanjarster.github.io/post/java-remote-debug/</link>
      <pubDate>Tue, 09 Oct 2018 16:01:20 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/java-remote-debug/</guid>
      <description>&lt;p&gt;本文介绍了远程Debug Java进程的方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Java程序制作Docker Image推荐方案</title>
      <link>https://chanjarster.github.io/post/java-dockerfile-best-practice/</link>
      <pubDate>Thu, 20 Sep 2018 14:36:00 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/java-dockerfile-best-practice/</guid>
      <description>&lt;p&gt;本文推荐了一种Java程序制作Docker Image的方案。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据库时区那些事儿 - Oracle的时区处理</title>
      <link>https://chanjarster.github.io/post/oracle-timezone/</link>
      <pubDate>Tue, 18 Sep 2018 10:41:33 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/oracle-timezone/</guid>
      <description>&lt;p&gt;当JVM时区和数据库时区不一致的时候，会发生什么？这个问题也许你从来没有注意过，但是当把Java程序容器化的时候，问题就浮现出来了，因为目前几乎所有的Docker Image的时区都是UTC。本文探究了Oracle及其JDBC驱动对于时区的处理方式，并尝试给出最佳实践。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据库时区那些事儿 - MySQL的时区处理</title>
      <link>https://chanjarster.github.io/post/mysql-timezone/</link>
      <pubDate>Mon, 17 Sep 2018 15:09:20 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/mysql-timezone/</guid>
      <description>&lt;p&gt;当JVM时区和数据库时区不一致的时候，会发生什么？这个问题也许你从来没有注意过，但是当把Java程序容器化的时候，问题就浮现出来了，因为目前几乎所有的Docker Image的时区都是UTC。本文探究了MySQL及其JDBC驱动对于时区的处理方式，并尝试给出最佳实践。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring Cloud Config配置文件最佳实践</title>
      <link>https://chanjarster.github.io/post/spring-cloud-config-best-practice/</link>
      <pubDate>Mon, 10 Sep 2018 19:51:11 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/spring-cloud-config-best-practice/</guid>
      <description>&lt;p&gt;大多数Spring Cloud项目都会使用Spring Cloud Config来管理应用启动时的配置文件，同时开发人员面临着多样化的程序启动方式：操作系统进程启动、docker启动、k8s启动。那么如何规划这些配置文件以适应多种启动方式呢？本文尝试给出一些建议&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何抽取公共服务并成功迁移</title>
      <link>https://chanjarster.github.io/post/extract-public-service/</link>
      <pubDate>Thu, 23 Aug 2018 16:52:01 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/extract-public-service/</guid>
      <description>&lt;p&gt;本文探讨了如何创建并落地一个公共服务的方法。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>多种认证、授权模型的比较</title>
      <link>https://chanjarster.github.io/post/compare-authc-authz-models/</link>
      <pubDate>Wed, 22 Aug 2018 13:25:35 +0800</pubDate>
      
      <guid>https://chanjarster.github.io/post/compare-authc-authz-models/</guid>
      <description>&lt;p&gt;本文比较了OAuth2.0的几种模式以及基于Session和JWT的认证模式。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>